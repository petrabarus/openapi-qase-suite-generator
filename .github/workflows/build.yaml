name: Build

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  # run on release
  release:
    types:
      - published

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/openapi_qase_suite_generator
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements.dev.txt

      - name: Pycodestyle
        # skip if release
        if: github.event_name != 'release'
        uses: petrabarus/github-action-pycodestyle@v1.0.2
        with:
          base: main
          exclude: '*.pyc,*.pyo,*.pyd'

      - name: Run tests
        run: |
          coverage run -m pytest
          coverage report -m
          coverage xml

      - name: Generate version
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            # Get the release tag (e.g., v1.2.3)
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            TIMESTAMP=$(date +%Y%m%d%H%M%S)
            # Use 0.0.0 for push to master or pull request
            VERSION="0.0.${TIMESTAMP}"
          fi
          echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_ENV
          echo $VERSION > VERSION
          echo "__version__ = \"$VERSION\"" > src/openapi_qase_suite_generator/__version.py

      - name: Build
        env:
          PACKAGE_VERSION: ${{ env.PACKAGE_VERSION }}
        run: |
          python -m build

      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: github.event.action == 'published'
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true

      - name: SonarCloud Scan
        # skip if release
        if: github.event_name != 'release'
        uses: SonarSource/sonarcloud-github-action@master
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
